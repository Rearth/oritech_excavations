plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    accessWidenerPath.set(project(":common").loom.accessWidenerPath)
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    // oritech + deps
    modImplementation "rearth.oritech:oritech-neoforge-1.21.1:0.18.1"
    include modApi("dev.technici4n:GrandPower:3.0.2")
    modImplementation "io.wispforest:owo-lib-neoforge:0.12.15.1-beta.6+1.21"
    forgeRuntimeLibrary(include(api("io.wispforest:endec:0.1.8")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:netty:0.1.4")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:gson:0.1.5")))
    forgeRuntimeLibrary(include(api("io.wispforest.endec:jankson:0.1.5")))
    forgeRuntimeLibrary(include(api("blue.endless:jankson:1.2.2")))
    modImplementation "software.bernie.geckolib:geckolib-neoforge-1.21.1:4.7.5.1"
    modRuntimeOnly "earth.terrarium.athena:athena-neoforge-1.21:4.0.0"

    // recipe viewer runtime
    switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
        case "emi": modRuntimeOnly "dev.emi:emi-neoforge:${emi_version}"; break
        case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:16.0.754"; break
        case "jei": modRuntimeOnly "mezz.jei:jei-1.21.1-neoforge:${jei_version}"; break
        case "disabled": break
        default: println("Unknown recipe viewer specified: ${recipe_viewer}. Must be EMI, REI, JEI, or disabled.")
    }

    // optional helpers
    modImplementation "curse.maven:jade-324717:5846105"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-neoforge:16.0.754"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
