plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

loom {
    runs {
        datagen {
            inherit server
            "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":common").file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=oritech_excavations"
            runDir "build/datagen"
        }
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    // oritech + deps
    modImplementation name: "oritech-fabric-0.17.4"
    modImplementation "io.wispforest:owo-lib:${owo_version}"
    modImplementation "software.bernie.geckolib:geckolib-fabric-1.21.1:4.6.6"
    modRuntimeOnly "earth.terrarium.athena:athena-fabric-1.21:4.0.0"
    include modApi("teamreborn:energy:4.1.0") { transitive = false }

    // recipe viewer runtime
    switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
        case "emi": modRuntimeOnly "dev.emi:emi-fabric:${emi_version}"; break
        case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:16.0.754"; break
        case "jei": modRuntimeOnly "mezz.jei:jei-1.21.1-fabric:${jei_version}"
        case "disabled": break
        default: println("Unknown recipe viewer specified: ${recipe_viewer}. Must be EMI, REI, JEI, or disabled.")
    }

    // other optional mods
    modImplementation "com.terraformersmc:modmenu:11.0.3"
    modRuntimeOnly "curse.maven:oracle-index-1206582:6538216"
    implementation "org.jsoup:jsoup:1.17.2"
    modImplementation "curse.maven:jade-324717:5639994"
    modImplementation "curse.maven:isometric-renders-483805:5432902"
    modImplementation "io.wispforest:worldmesher:0.4.6+1.21"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
